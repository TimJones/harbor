#!/bin/bash

# Copyright 2016 Port Direct
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e
echo "${OS_DISTRO}: Generating Cloud (or Hardware) provider specific configs"
################################################################################
source /usr/bin/load-environment
export OS_DOMAIN=${OS_DOMAIN}
echo "OS_DOMAIN=${OS_DOMAIN}"
source /opt/harbor/service-hosts.sh

SERVICE_HOST_LIST=" NODE_ETCD_SERVICE_HOST \
                    DOCKER_ETCD_SERVICE_HOST \
                    KUBE_ETCD_SERVICE_HOST"

KUBE_MANIFESTS_DIR=/etc/kubernetes/manifests
TEMPLATE_MANIFESTS_DIR=/etc/harbor-kube/manifests
MANIFESTS_WORK_DIR=/tmp/harbor/manifests

HARBOR_KUBE_OPENSTACK_CONFIG=/run/harbor/kube_openstack/config
mkdir -p /run/harbor/kube_openstack
LOCAL_ENV_LIST="$LOCAL_ENV_LIST HARBOR_KUBE_OPENSTACK_CONFIG"

HARBOR_HOSTS_FILE=/var/run/harbor/hosts
HARBOR_RESOLV_FILE=/var/run/harbor/resolv.conf

LOCAL_ENV_LIST="$LOCAL_ENV_LIST HARBOR_HOSTS_FILE HARBOR_RESOLV_FILE"


echo "${OS_DISTRO}: Detecting provider"
################################################################################
if dmidecode -s bios-version | grep -q ".amazon$" ; then
  echo "${OS_DISTRO}: AWS detected"
  ##############################################################################


  echo "${OS_DISTRO}: Updating Hosts Vars"
  ##############################################################################
  PROVIDER_PUBLIC_IP=$(ec2-metadata -v | awk '{ print $2 }')
  PROVIDER_PUBLIC_HOSTNAME=$(ec2-metadata -p | awk '{ print $2 }')
  NODE_PROVIDER_PUBLIC_HOSTS_ENTRY="${PROVIDER_PUBLIC_IP} ${PROVIDER_PUBLIC_HOSTNAME}"

  PROVIDER_LOCAL_IP=$(ec2-metadata -o | awk '{ print $2 }')
  PROVIDER_LOCAL_HOSTNAME=$(ec2-metadata -h | awk '{ print $2 }')
  NODE_PROVIDER_LOCAL_HOSTS_ENTRY="${PROVIDER_LOCAL_IP} ${PROVIDER_LOCAL_HOSTNAME}"
fi


echo "${OS_DISTRO}: Manageing host files at $HARBOR_HOSTS_FILE & /etc/hosts"
################################################################################
create_harbor_service_hosts () {
  cat > $HARBOR_HOSTS_FILE <<EOF
# Generated by Harbor Kubelet ($(date --utc))
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

# Harbor node hostname
${NODE_NETWORK_DEFAULT_IP} $(hostname -s) $(hostname -s).${OS_DOMAIN}

# Detected provider hostnames (if any)
${NODE_PROVIDER_PUBLIC_HOSTS_ENTRY}
${NODE_PROVIDER_LOCAL_HOSTS_ENTRY}

# FreeIPA Host
${NETWORK_FREEIPA_FREEIPA_MASTER_IP} ${FREEIPA_SERVICE_HOST}

# Harbor Service Hosts
127.0.0.1 ${KUBERNETES_SERVICE_HOST}
EOF
  for SERVICE_HOST in $SERVICE_HOST_LIST; do
    LOCAL_ENV_VALUE=$(set | grep ^$SERVICE_HOST= | awk -F "$SERVICE_HOST=" '{ print $2 }')
    echo "${NODE_NETWORK_DEFAULT_IP} $LOCAL_ENV_VALUE" >> $HARBOR_HOSTS_FILE
  done
}

create_harbor_service_hosts
cat $HARBOR_HOSTS_FILE > /etc/hosts


echo "${OS_DISTRO}: Manageing resolv.conf files at $HARBOR_RESOLV_FILE & /etc/resolv.conf"
################################################################################
create_harbor_host_resolv_config () {
  cat > $HARBOR_RESOLV_FILE <<EOF
# Generated by Harbor Kubelet ($(date --utc))
search ${OS_DOMAIN} svc.${OS_DOMAIN} default.svc.${OS_DOMAIN}
options timeout:1 attempts:1
nameserver ${NETWORK_FREEIPA_FREEIPA_MASTER_IP}
nameserver ${NODE_NETWORK_DEFAULT_IP}
nameserver ${NETWORK_EXTERNAL_DNS_DNS_SERVER}
EOF
}

create_harbor_host_resolv_config
cat $HARBOR_RESOLV_FILE > /etc/resolv.conf


echo "${OS_DISTRO}: Manageing openstack config file at $HARBOR_KUBE_OPENSTACK_CONFIG"
################################################################################
create_kube_openstack_config () {
  rm -rf $HARBOR_KUBE_OPENSTACK_CONFIG
  cat > $HARBOR_KUBE_OPENSTACK_CONFIG <<EOF
[Global]
auth-url="http://${KEYSTONE_PUBLIC_SERVICE_HOST}:5000/v2.0"
Username="${AUTH_KUBERNETES_KEYSTONE_USER}"
Password="${AUTH_KUBERNETES_KEYSTONE_PASSWORD}"
tenant-name="${AUTH_KUBERNETES_KEYSTONE_PROJECT}"
EOF
}
create_kube_openstack_config



cfg_kuryr=/etc/kuryr/kuryr.conf
echo "${OS_DISTRO}: Manageing kuryr config file at $cfg_kuryr"
################################################################################
crudini --set $cfg_kuryr DEFAULT bindir "/opt/kuryr/usr/libexec/kuryr"
crudini --set $cfg_kuryr k8s api_root "http://${KUBERNETES_SERVICE_HOST}:8080"
