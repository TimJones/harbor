#!/bin/bash
DATA=/data
DATA_TEMPLATE=/data-template

################################################################################
function upgrade_server () {
  systemctl stop dirsrv.target
  /usr/sbin/setup-ds.pl -u -s General.UpdateMode=offline
  DIR=/var/libexec/ipa/ipa-upgrade-rpm-scriptlets.$$
  mkdir -p $DIR
  for i in 389-ds-base pki-server ; do
    rpm -q --scripts $i | perl -lne '/^\S+ scriptlet/ and $x = 0; print if $x; if (/^postinstall scriptlet \(using (\S+)\)/) { $x = 1; print "#!$1"; if ($1 eq "/bin/sh") { print "set -x" } }' > $DIR/$i.script
    if [ -s "$DIR/$i.script" ] ; then
      sed -i '\|/sbin/ldconfig|d' $DIR/$i.script
      chmod a+x $DIR/$i.script
      $DIR/$i.script 2
    fi
  done
  rm -rf $DIR
  systemctl start certmonger.service
  if [ -f /var/lib/ipa/sysupgrade/sysupgrade.state ] ; then
    PLATFORM=$(python -c 'import ipaplatform; print ipaplatform.NAME;')
    sed -i "s/platform.*/platform = $PLATFORM/" /var/lib/ipa/sysupgrade/sysupgrade.state
  fi
  ipa-server-upgrade
  for c in /etc/systemctl-lite-enabled/*-domainname.service ; do
    base_c=$(basename $c)
    for i in /usr/lib/systemd/system/*-domainname.service ; do
      base_i=$(basename $i)
      if [ -e "$c" ] && [ -e "$i" ] && [ "$base_c" != "$base_i" ] ; then
        echo "Renaming $c to $base_i"
        mv $c "$(dirname $c)/$base_i"
      fi
    done
  done
  mv /data/build-id /data/build-id-upgraded-$( date +'%Y%m%d-%H%M%S' )
  cat /data-template/build-id > ${DATA}/build-id
}


echo "${OS_DISTRO}: Upgrading server if required"
################################################################################
if ! diff ${DATA}/volume-version /etc/volume-version ; then
  echo "The /data volume was created using incompatible image."
else
  if [ -f ${DATA}/etc/resolv.conf.ipa ] ; then
    perl -pe 's/^(nameserver).*/$1 127.0.0.1/' ${DATA}/etc/resolv.conf.ipa > /etc/resolv.conf
  fi

  # Removing kdcinfo.* which is likely to hold old IP address
  rm -rf /var/lib/sss/pubconf/kdcinfo.*
  if cmp ${DATA}/build-id /data-template/build-id ; then
    echo "FreeIPA server is already configured, starting the services."
  else
    echo "FreeIPA server is already configured but with different version, starting upgrade."
    for d in /usr/share/java/resteasy* ; do
      sed -i 's#^\(JAVA_OPTS=".*-DRESTEASY_LIB=\)/usr/share/java/resteasy[a-z-]*\(.*"\)#\1'$d'\2#' /etc/sysconfig/pki-tomcat
    done
    upgrade_server
    echo "FreeIPA server upgraded."
  fi

  echo "${OS_DISTRO}: Restarting Freeip"
  ################################################################################
  /usr/sbin/ipactl restart
fi
